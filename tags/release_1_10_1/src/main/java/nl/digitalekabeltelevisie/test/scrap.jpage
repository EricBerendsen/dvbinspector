java.awt.Font[] fonts;java.awt.GraphicsEnvironment ge = java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment();fonts = ge.getAllFonts();for (int j = 0; j < 7; j++) {	for (int i = 32; i < 128; i++) {		System.out.println("set = "+j+" char "+i+" ( "+(char)i+" ), G0_sets[j][i]=" +TxtTriplet.G0_sets[j][i]+" char = "+(char)TxtTriplet.G0_sets[j][i]);			}}An exception occurred during evaluation:  java.lang.ArrayIndexOutOfBoundsExceptionbyte [] source = new byte[]{0,0,1,4, 2, 0,0,4,3,2,0,0,1, 5,3,2,0 ,0 ,3,0,0,1,4};byte [] target = new byte[]{0,0,1};for(int i=0;i<=17;i++){	System.out.println("indexOft "+i+"="+nl.digitalekabeltelevisie.util.Utils.indexOf(source,target,i));}private int generateClutEntry_8Bits(int i){	int T=0, R=0, G=0, B=0;	if ((i & 0x88) == 0)	{		if ((i & 0x70) == 0)		{			if ((i & 7) == 0)				T = R = G = B = 0;			else			{				R = (i & 1) != 0 ? 0xFF : 0;				G = (i & 2) != 0 ? 0xFF : 0;				B = (i & 4) != 0 ? 0xFF : 0;				T = 0x40;			}		}		else		{			R = ((i & 1) != 0 ? 0x55 : 0) + ((i & 0x10) != 0 ? 0xAA : 0);			G = ((i & 2) != 0 ? 0x55 : 0) + ((i & 0x20) != 0 ? 0xAA : 0);			B = ((i & 4) != 0 ? 0x55 : 0) + ((i & 0x40) != 0 ? 0xAA : 0);			T = 0xFF;		}	}	else if ((i & 0x88) == 8)	{		R = ((i & 1) != 0 ? 0x55 : 0) + ((i & 0x10) != 0 ? 0xAA : 0);		G = ((i & 2) != 0 ? 0x55 : 0) + ((i & 0x20) != 0 ? 0xAA : 0);		B = ((i & 4) != 0 ? 0x55 : 0) + ((i & 0x40) != 0 ? 0xAA : 0);		T = 0x80;	}	else if ((i & 0x88) == 0x80)	{		R = ((i & 1) != 0 ? 0x2A : 0) + ((i & 0x10) != 0 ? 0x55 : 0) + 0x80;		G = ((i & 2) != 0 ? 0x2A : 0) + ((i & 0x20) != 0 ? 0x55 : 0) + 0x80;		B = ((i & 4) != 0 ? 0x2A : 0) + ((i & 0x40) != 0 ? 0x55 : 0) + 0x80;		T = 0xFF;	}	else if ((i & 0x88) == 0x88)	{		R = ((i & 1) != 0 ? 0x2A : 0) + ((i & 0x10) != 0 ? 0x55 : 0);		G = ((i & 2) != 0 ? 0x2A : 0) + ((i & 0x20) != 0 ? 0x55 : 0);		B = ((i & 4) != 0 ? 0x2A : 0) + ((i & 0x40) != 0 ? 0x55 : 0);		T = 0xFF;	}	return (T<<24 | R<<16 | G<<8 | B);}	int table[] = new int[256];	for (int i=0; i<256; i++){		table[i] = DVBSubpicture.generateClutEntry_8Bits(i);		System.out.print(", 0x"+Integer.toHexString(table[i]));	}nl.digitalekabeltelevisie.util.RangeHashMap<Integer,String> map = new nl.digitalekabeltelevisie.util.RangeHashMap<Integer,String>(); map.put(3,5,"3-5");map.put(6,6,"6");map.put(8,11,"8-11");map.put(3,5,"3-5a");//map.put(3,4,"3-4");for(int i=0;i<=12;i++){	System.out.println("Map get "+i+"="+map.find(i));}
System.out.println("The name of class Foo is: "+nl.digitalekabeltelevisie.data.mpeg.TransportStream.class.getName());